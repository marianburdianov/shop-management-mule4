<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

<flow name="implementationGetPurchaseInfos">
	<db:select doc:name="selectPurchaseInfos" doc:id="54431c9e-b054-4cdb-8526-5e4691831bdd" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id]]></db:sql>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:name="setPurchaseInfosPayload">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	purchaseinfoId:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employeeId:$.employee_id distinctBy $ reduce $$+$,
    customerId:$.customer_id distinctBy $ reduce $$+$,
	productId:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2d15dfb1-a2be-48ce-af38-56d05c7ced73" message="Get all purchaseInfos"/>
    
</flow>
<flow name="implementationGetPurchaseInfoById">
	<set-variable value="#[message.attributes.uriParams.purchaseInfoId]" doc:name="purchaseInfoId" doc:id="26be9568-b0e1-46bd-b298-7b46cdc0ca23" variableName="purchaseInfoId"/>
		<db:select doc:name="selectPurchaseInfoById" doc:id="b224e810-5122-4f33-ae0a-d23b42aaa2cf" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id 
WHERE pi.purchaseinfo_id = :purchaseInfo_id]]></db:sql>
            <db:input-parameters><![CDATA[#[{'purchaseInfo_id' : attributes.uriParams.purchaseInfoId}]]]></db:input-parameters>
        </db:select>
        <ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="871a5f64-02b3-4350-a39e-1b1217858b16" doc:name="setPurchaseInfoPayload">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	purchaseinfoId:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employeeId:$.employee_id distinctBy $ reduce $$+$,
    customerId:$.customer_id distinctBy $ reduce $$+$,
	productId:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="92e0de67-9d85-4c31-8680-8a5568c40642" message="Get purchaseInfo by id"/>
</flow>
<flow name="implementationPostPurchaseInfo">
	<set-variable value="#[payload]" doc:name="originalPayload" doc:id="92c3892c-f7a7-4096-b2c9-bd6b2951bd73" variableName="originalPayload"/>
		<db:insert doc:name="insertPurchaseInfo" doc:id="d928de9d-8344-4f6b-bee6-90a382247484" config-ref="Database_Config">
			<db:sql><![CDATA[INSERT INTO purchaseinfos (employee_id, customer_id, cost, amount, date) 
VALUES (:employee_id, :customer_id, :cost, :amount, :date);
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	employee_id : vars.originalPayload.employeeId,
	customer_id : vars.originalPayload.customerId,
	cost : vars.originalPayload.cost,
	amount : vars.originalPayload.amount,
	date : vars.originalPayload.date
}]]]></db:input-parameters>
			<db:auto-generated-keys-column-indexes />
			<db:auto-generated-keys-column-names />
		
</db:insert>
		<db:select doc:name="selectIdOfLastCreated" doc:id="91d748e2-962f-403e-b80c-aa449c99b2e2" target="lastId" config-ref="Database_Config" targetValue="#[payload[0].purchaseinfo_id]">
			<db:sql ><![CDATA[SELECT purchaseinfo_id FROM purchaseinfos WHERE purchaseinfo_id=(select last_insert_id())]]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="55fbef73-5a20-45e3-a8e9-9d49b8177699" message="#[vars.lastId]"/>
		<foreach doc:name="For Each" doc:id="3533ee39-06d4-475e-9188-ed6f4e9e0125" collection="#[vars.originalPayload.productId]">
			<set-variable value="#[payload]" doc:name="productId" doc:id="583e6405-b38d-4f81-83e3-ef2c669f68cf" variableName="productId"/>
			<db:insert doc:name="insertProduct" doc:id="cd2317bd-8912-496e-ab24-9870ad46b8b5" config-ref="Database_Config">
				<db:sql ><![CDATA[INSERT INTO purchaseinfos_products (product_id, purchaseinfo_id ) VALUES 
(:product_id, :purchaseinfo_id)]]></db:sql>
				<db:input-parameters ><![CDATA[#[{
	product_id : vars.productId,
	purchaseinfo_id : vars.lastId
}]]]></db:input-parameters>
			</db:insert>
		</foreach>
		<db:select doc:name="selectPurchaseInfo" doc:id="e8230bf2-081a-4a5f-a82e-9a8d9ab1fe64" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id 
WHERE pi.purchaseinfo_id = :last_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[last_id : vars.lastId]]]></db:input-parameters>
		</db:select>
		<ee:transform xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:name="setPurchaseInfoPayload">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	purchaseInfoId:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employeeId:$.employee_id distinctBy $ reduce $$+$,
    customerId:$.customer_id distinctBy $ reduce $$+$,
	productId:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="d93827b1-67f0-4914-b7c4-e37c1d346d3e" message="PurchaseInfo created"/>
</flow>
<flow name="implementationUpdatePurchaseInfo">
	<set-variable value="#[message.attributes.uriParams.purchaseInfoId]" doc:name="purchaseInfoId" doc:id="180c8550-7a1b-4a94-92ef-87ce4fe16a03" variableName="purchaseInfoId"/>
		<set-variable value="#[payload]" doc:name="originalPayload" doc:id="9f125a00-78fc-4cfc-8538-0076a5f8817a" variableName="originalPayload"/>
		<logger level="INFO" doc:name="Logger" doc:id="33f3b17f-5041-46b3-8f90-afbdd5bcbda2" message="received payload #[payload]"/>
		<db:delete doc:name="deleteAllProducts" doc:id="0b0bb99c-031a-4762-924b-64d75fa70620" config-ref="Database_Config" queryTimeoutUnit="HOURS">
				<db:sql><![CDATA[DELETE FROM purchaseinfos_products 
WHERE purchaseinfo_id = :purchaseinfo_id]]></db:sql>
				<db:input-parameters><![CDATA[#[{
	purchaseinfo_id : vars.purchaseInfoId
}]]]></db:input-parameters>
			</db:delete>
		<foreach doc:name="For Each" doc:id="2e73d216-90ba-4c38-9d77-4ab61f4943ee" collection="#[vars.originalPayload.productId]">
			<set-variable value="#[payload]" doc:name="productId" doc:id="d8b22c52-bae4-4337-bc06-83907ab3cb4f" variableName="productId"/>
			<db:insert doc:name="insertProducts" doc:id="8ae3d552-6bfb-4f81-b53f-e86feeb546d2" config-ref="Database_Config">
				<db:sql><![CDATA[INSERT INTO purchaseinfos_products (product_id, purchaseinfo_id ) VALUES 
(:product_id, :purchaseinfo_id)]]></db:sql>
				<db:parameter-types />
				<db:input-parameters><![CDATA[#[{
	product_id : vars.productId,
	purchaseinfo_id : vars.purchaseInfoId
}]]]></db:input-parameters>
				<db:auto-generated-keys-column-indexes />
				<db:auto-generated-keys-column-names />
			</db:insert>
			<logger level="TRACE" doc:name="Logger" doc:id="e0ef9f3a-8804-41fa-b978-b53a3948582a" message="#[vars.productId]" />
		</foreach>
		<db:update doc:name="updatePurchaseInfo" doc:id="42710466-04e4-45a4-81f4-ae41358f8b0f" config-ref="Database_Config">
			<db:sql><![CDATA[UPDATE purchaseinfos 
SET employee_id = :employee_id, customer_id = :customer_id, cost = :cost, amount = :amount, date = :date 
WHERE purchaseinfo_id = :purchaseinfo_id]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	purchaseinfo_id : vars.purchaseInfoId,
	employee_id : vars.originalPayload.employeeId,
	customer_id : vars.originalPayload.customerId,
	cost : vars.originalPayload.cost,
	amount : vars.originalPayload.amount,
	date : vars.originalPayload.date
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="e0b69834-3e97-4f38-9a81-8d529d1f697b" message="#[payload]"/>
        <db:select doc:name="selectPurchaseInfo" doc:id="5cc0f3ad-1f60-4ce4-958d-160a5623e86f" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id 
WHERE pi.purchaseinfo_id = :purchaseInfo_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'purchaseInfo_id' : vars.purchaseInfoId}]]]></db:input-parameters>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:name="setPurchaseInfoPayload">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	"Status":200,
	"message":"Updated",
	purchaseInfoId:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employeeId:$.employee_id distinctBy $ reduce $$+$,
    customerId:$.customer_id distinctBy $ reduce $$+$,
	productId:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7813abc3-bd06-42c6-997b-b12fd39fa8ff" message="PurchaseInfo is updated"/>
</flow>
<flow name="implementationDeletePurchaseInfo">
	<set-variable value="#[attributes.uriParams.purchaseInfoId]" doc:name="purchaseInfoId" doc:id="e156589c-faf6-42d4-b986-44479baec492" variableName="purchaseInfoId"/>
		<db:delete doc:name="deletePurchaseInfo" doc:id="3a4d3482-aa1a-4a4f-9af9-dbe453410569" config-ref="Database_Config">
			<db:sql ><![CDATA[DELETE FROM purchaseinfos WHERE purchaseinfo_id = :purchaseinfo_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	'purchaseinfo_id' : vars.purchaseInfoId
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="setPurchaseInfoPayload">
            <ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Status": 204,
	"message": "Deleted"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="Delete purchaseInfo from database" />
</flow>
	
</mule>
