<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	
	<flow name="implementation_getProducts_Flow" doc:id="ccc4ca6d-4a05-40f3-a52d-cef96ca30417">
		<db:select doc:name="Select Products" doc:id="95d387b1-c0ce-4a10-bc82-ab5082036f43" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM products]]></db:sql>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.product_id pluck{
	product_id:$$,
	name:$.name distinctBy $ reduce $$+$,
	price:$.price distinctBy $ reduce $$+$,
	quantity:$.quantity distinctBy $ reduce $$+$,
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="d64b255d-9928-45b4-b13f-66502970f754" message="Get all products"/>
	
</flow>
	<flow name="implementation_getEmployees_Flow">
        <db:select doc:name="Select Employees" doc:id="aec1a043-85f9-40e7-8bdd-deae70bfda51" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM employees]]></db:sql>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.employee_id pluck{
	employee_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	gender:$.gender distinctBy $ reduce $$+$,
    birth_date:$.birth_date distinctBy $ reduce $$+$,
    hire_date:$.hire_date distinctBy $ reduce $$+$,
    role:$.role distinctBy $ reduce $$+$,
    salary:$.salary distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="9c407f1c-123f-4888-aecf-cfa4536db291" message="Get all employees"/>
    

</flow>
    <flow name="implementation_getCustomers_Flow" initialState="started">
        <db:select doc:name="Select Customers" doc:id="9bd439fa-cc72-4e3f-8910-c181b1449ca2" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM customers]]></db:sql>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.customer_id pluck{
	customer_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	phone_number:$.phone_number distinctBy $ reduce $$+$,
    address:$.address distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="9c0fea51-8fb3-45b3-95a6-56c253411aaf" message="Get all customers"/>
    
</flow>
    <flow name="implementation_getPurchaseInfos_Flow">
        <db:select doc:name="Select PurchaseInfos" doc:id="ee391bec-3c0c-4bed-82a6-189d7ca795ce" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id]]></db:sql>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	purchaseinfo_id:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employee_id:$.employee_id distinctBy $ reduce $$+$,
    customer_id:$.customer_id distinctBy $ reduce $$+$,
	product_id:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="65b9ce81-1fe1-482f-a279-4b755cb3cde9" message="Get all purchaseInfos"/>
    
</flow>
    <flow name="implementation_getProductById">
		<set-variable value="#[message.attributes.uriParams.productId]" doc:name="Set Variable" doc:id="28f03114-721d-4bca-9780-91bc12875acb" variableName="productId"/>
		<db:select doc:name="Select ProductById" doc:id="063126c4-2511-45ec-a504-11d75edd4fd8" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM products
WHERE product_id = :product_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'product_id' : vars.productId}]]]></db:input-parameters>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.product_id pluck{
	product_id:$$,
	name:$.name distinctBy $ reduce $$+$,
	price:$.price distinctBy $ reduce $$+$,
	quantity:$.quantity distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="cc7af2ae-4932-4c21-a4f3-b38f274da2c3" message="Get product by id"/>
    
</flow>
    
    <flow name="implementation_getCustomerById">
    	<set-variable value="#[message.attributes.uriParams.customerId]" doc:name="Set Variable" doc:id="c8341218-c2eb-4119-9e0f-d5c9c5bd24f0" variableName="customerId"/>
		<db:select doc:name="Select CustomerById" doc:id="07a794d8-caf2-4193-ac06-a62c3033bc50" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT * 
FROM customers
WHERE customer_id =:customer_id]]></db:sql>
            <db:input-parameters><![CDATA[#[{'customer_id' : attributes.uriParams.customerId}]]]></db:input-parameters>
        </db:select>
        <ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.customer_id pluck{
	customer_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	phone_number:$.phone_number distinctBy $ reduce $$+$,
    address:$.address distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7acac0ba-22f2-495e-a83f-d56ff6771747" message="Get customer by id"/>
    
</flow>
    <flow name="implementation_getEmployeeById">
    	<set-variable value="#[message.attributes.uriParams.employeeId]" doc:name="Set Variable" doc:id="87b8dbc2-5a6c-4c90-a254-e988dd4e32ac" variableName="employeeId"/>
		<db:select doc:name="Select EmployeeById" doc:id="a1528763-a217-408d-9b5c-ce54fcb8e594" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT * 
FROM employees
WHERE employee_id =:employee_id]]></db:sql>
            <db:input-parameters><![CDATA[#[{'employee_id' : attributes.uriParams.employeeId}]]]></db:input-parameters>
        </db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.employee_id pluck{
	employee_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	gender:$.gender distinctBy $ reduce $$+$,
    birth_date:$.birth_date distinctBy $ reduce $$+$,
    hire_date:$.hire_date distinctBy $ reduce $$+$,
    role:$.role distinctBy $ reduce $$+$,
    salary:$.salary distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="10524014-15a3-433f-a331-ad89218c161a" message="Get employee  by id"/>
    
</flow>
    <flow name="implementation_GetPurchaseInfoById">
    	 <set-variable value="message.attributes.uriParams.purchaseInfoId" doc:name="Set Variable" doc:id="5366544e-d3d0-42fc-a642-65b954496cbd" variableName="purchaseInfoId"/>
		<db:select doc:name="Select PurchaseInfoById" doc:id="a8f04ea1-0c8e-4752-a24b-081e5403fe5e" config-ref="Database_Config">
            <db:sql><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id 
WHERE pi.purchaseinfo_id = :purchaseInfo_id]]></db:sql>
            <db:input-parameters><![CDATA[#[{'purchaseInfo_id' : attributes.uriParams.purchaseInfoId}]]]></db:input-parameters>
        </db:select>
        <ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="2ddcb4eb-656d-4736-bbfa-e750ccf275cc">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	purchaseinfo_id:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employee_id:$.employee_id distinctBy $ reduce $$+$,
    customer_id:$.customer_id distinctBy $ reduce $$+$,
	product_id:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="d51910cc-af74-42cf-a308-68ac5759e133" message="Get purchaseInfo by id"/>
    
</flow>
    <flow name="implementation_PostCustomer">
		<db:insert doc:name="Insert Customer" doc:id="7ce53a39-247a-4c00-a630-8ebe9c97be81" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO customers ( first_name, last_name, phone_number, address) 
VALUES ( :first_name, :last_name, :phone_number, :address);]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	first_name : payload.firstName,
	last_name : payload.lastName,
	phone_number : payload.phoneNumber,
	address : payload.address
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="Select" doc:id="e640f966-bdf8-4e46-9a8f-dfa6e824a99e" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM customers
WHERE customer_id=(select last_insert_id())]]></db:sql>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.customer_id pluck{
	customer_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	phone_number:$.phone_number distinctBy $ reduce $$+$,
    address:$.address distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="31e82b54-d0eb-4997-b83c-337fdbc78808" message="Customer created"/>
    
</flow>
    <flow name="implementation_PostProduct">
    	<db:insert doc:name="Insert Product" doc:id="e10081a7-2874-4f53-8de8-afd64d5ee82e" config-ref="Database_Config" autoGenerateKeys="true" autoGeneratedKeysColumnNames="#[['product_id']]">
			<reconnect-forever />
			<db:sql><![CDATA[INSERT INTO products (name, price, quantity) 
VALUES (:name, :price, :quantity);]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	name : payload.name,
	price : payload.price,
	quantity: payload.quantity
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="Select" doc:id="a54b4bf1-c728-4fd0-8c35-22d7b22c5f13" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM products
WHERE product_id=(select last_insert_id())]]></db:sql>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.product_id pluck{
	product_id:$$,
	name:$.name distinctBy $ reduce $$+$,
	price:$.price distinctBy $ reduce $$+$,
	quantity:$.quantity distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="6a6ed7ab-c857-4a1f-91cb-e236af6f73bd" message="Product created"/>
    
</flow>
    <flow name="implementation_PostEmployee">
    	<db:insert doc:name="Insert Employee" doc:id="b6de7e62-d0b2-4453-a581-3bdd333bd00b" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO employees (first_name, last_name, gender, birth_date, hire_date, role, salary) 
VALUES (:first_name, :last_name, :gender, :birth_date, :hire_date, :role, :salary);]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	first_name : payload.firstName,
	last_name : payload.lastName,
	gender : payload.gender,
	birth_date : payload.birthdate,
	hire_date : payload.hiredate,
	role : payload.role,
	salary : payload.salary
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="Select" doc:id="496e7dff-0e2a-47b6-9090-e9c68672a6cf" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM employees
WHERE employee_id=(select last_insert_id())]]></db:sql>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.employee_id pluck{
	employee_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	gender:$.gender distinctBy $ reduce $$+$,
    birth_date:$.birth_date distinctBy $ reduce $$+$,
    hire_date:$.hire_date distinctBy $ reduce $$+$,
    role:$.role distinctBy $ reduce $$+$,
    salary:$.salary distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b400bc95-dfa9-458e-af4a-7962332b664e" message="Employee created"/>
    
</flow>
    <flow name="implementation_PostPurchaseIndo">
    	<set-variable value="#[payload]" doc:name="originalPayload" doc:id="7e981415-0878-4bac-8ec7-e67441f15ce7" variableName="originalPayload"/>
		<db:insert doc:name="Insert PurchaseInfo" doc:id="c5c26367-1ffd-431c-8914-0e1fbadd4ea1" config-ref="Database_Config">
			<db:sql><![CDATA[INSERT INTO purchaseinfos (employee_id, customer_id, cost, amount, date) 
VALUES (:employee_id, :customer_id, :cost, :amount, :date);
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	employee_id : vars.originalPayload.employee_id,
	customer_id : vars.originalPayload.customer_id,
	gender : vars.originalPayload.gender,
	cost : vars.originalPayload.cost,
	amount : vars.originalPayload.amount,
	date : vars.originalPayload.date
}]]]></db:input-parameters>
			<db:auto-generated-keys-column-indexes />
			<db:auto-generated-keys-column-names />
		
</db:insert>
		<db:select doc:name="Select" doc:id="7d32373b-fc43-4137-b61b-500a983dd4fa" target="last_id" targetValue="#[payload[0].purchaseinfo_id]" config-ref="Database_Config" transactionalAction="NOT_SUPPORTED">
			<db:sql ><![CDATA[SELECT purchaseinfo_id FROM purchaseinfos WHERE purchaseinfo_id=(select last_insert_id())]]></db:sql>
			<db:parameter-types />
		</db:select>
		<foreach doc:name="For Each" doc:id="5a1852fb-f835-4472-872b-ca7bba51868d" collection="#[vars.originalPayload.product_id]">
			<set-variable value="#[payload]" doc:name="Set Variable" doc:id="3c208c32-82fc-4910-91a7-4e0eef4f29ac" variableName="productId"/>
			<db:insert doc:name="Insert" doc:id="4b3ea911-8b3e-4c00-b54d-48b5158882ca" config-ref="Database_Config">
				<db:sql ><![CDATA[INSERT INTO purchaseinfos_products (product_id, purchaseinfo_id ) VALUES 
(:product_id, :purchaseinfo_id)]]></db:sql>
				<db:input-parameters ><![CDATA[#[{
	product_id : vars.productId,
	purchaseinfo_id : vars.last_id
}]]]></db:input-parameters>
			</db:insert>
		</foreach>
		<db:select doc:name="Select" doc:id="73263a8b-db37-45e0-bb2b-b59a9835f61c" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id 
WHERE pi.purchaseinfo_id = :last_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[last_id : vars.last_id]]]></db:input-parameters>
		</db:select>
		<ee:transform xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	purchaseinfo_id:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employee_id:$.employee_id distinctBy $ reduce $$+$,
    customer_id:$.customer_id distinctBy $ reduce $$+$,
	product_id:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1d9fdc5d-8fc9-494f-ba2c-175eee5a54da" message="PurchaseInfo created"/>
    
</flow>
    <flow name="implementation_UpdateProduct">
    	<set-variable value="#[message.attributes.uriParams.productId]" doc:name="Set Variable" doc:id="19ab3250-9df5-41af-8ed3-7408cf841cc5" variableName="productId"/>
		<db:update doc:name="Update Product" doc:id="0bc6a208-fef3-481c-bbfa-253c29eab2fb" config-ref="Database_Config">
			<db:sql ><![CDATA[UPDATE products 
SET name = :name, price = :price, quantity = :quantity 
WHERE product_id = :product_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	product_id : payload.product_id,
	name : payload.name,
	price : payload.price,
	quantity : payload.quantity
}]]]></db:input-parameters>
		</db:update>
		<db:select doc:name="Select Product" doc:id="94276be5-ba12-433f-9d31-f0a526cf495d" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM products 
WHERE product_id = :product_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'product_id' : vars.productId}]]]></db:input-parameters>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.product_id pluck{
	"Status":200,
	"message":"Updated",
	product_id:$$,
	name:$.name distinctBy $ reduce $$+$,
	price:$.price distinctBy $ reduce $$+$,
	quantity:$.quantity distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="63354556-ab69-4cc1-8111-5befd86f39a1" message="Product updated"/>
    
</flow>
<flow name="implementation_UpdateCustomer">
    	<set-variable value="#[message.attributes.uriParams.customerId]" doc:name="Set Variable" doc:id="def6f447-b66d-4d2d-bb61-94a04af967af" variableName="customerId"/>
		<db:update doc:name="Update Customer" doc:id="9f928349-6e28-4745-b695-04f158b92896" config-ref="Database_Config">
			<db:sql ><![CDATA[UPDATE customers 
SET first_name = :first_name, last_name = :last_name, phone_number = :phone_number, address = :address 
WHERE customer_id = :customer_id
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	customer_id : payload.customer_id,
	first_name : payload.firstName,
	last_name : payload.lastName,
	phone_number : payload.phoneNumber,
	address : payload.address
}]]]></db:input-parameters>
		</db:update>
		<db:select doc:name="Select Customer" doc:id="b4bcb8f3-26ce-4f4f-9fc7-2f7423a13cb2" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM customers
WHERE customer_id =:customer_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'customer_id' : vars.customerId}]]]></db:input-parameters>
		</db:select>
        <ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.customer_id pluck{
	"Status":200,
	"message":"Updated",
	customer_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	phone_number:$.phone_number distinctBy $ reduce $$+$,
    address:$.address distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="28a5be7c-71e2-4e90-a6ef-8a7d356a0b3e" message="Customer updated"/>
    
</flow>
    <flow name="implementation_UpdateEmployee">
    	<set-variable value="#[message.attributes.uriParams.employeeId]" doc:name="Set Variable" doc:id="34efa661-b56f-4a4e-9794-4f5dd629b537" variableName="employeeId"/>
		<db:update doc:name="Update Employee" doc:id="4666793f-af37-48ec-8b7c-98a6fc0de774" config-ref="Database_Config">
			<db:sql ><![CDATA[UPDATE employees 
SET first_name = :first_name, last_name = :last_name, gentder = :gender, birth_date = :birth_date, hire_date = :hire_date, role = :role, salary = :salary 
WHERE employee_id = :employee_id
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	employee_id : payload.employee_id,
	first_name : payload.firstName,
	last_name : payload.lastName,
	gender : payload.gender,
	birth_date : payload.birthdate,
	role : payload.role,
	salary : payload.salary
}]]]></db:input-parameters>
		</db:update>
        <db:select doc:name="Select Emploee" doc:id="11dc15a4-eadc-4a28-afb1-b7de0a2e03d3" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * 
FROM employees
WHERE employee_id =:employee_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'employee_id' : vars.employeeId}]]]></db:input-parameters>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.employee_id pluck{
	"Status":200,
	"message":"Updated",
	employee_id:$$,
	first_name:$.first_name distinctBy $ reduce $$+$,
	last_name:$.last_name distinctBy $ reduce $$+$,
	gender:$.gender distinctBy $ reduce $$+$,
    birth_date:$.birth_date distinctBy $ reduce $$+$,
    hire_date:$.hire_date distinctBy $ reduce $$+$,
    role:$.role distinctBy $ reduce $$+$,
    salary:$.salary distinctBy $ reduce $$+$
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="d76ede07-989d-4bce-b27a-452fd70cf2fd" message="Employee updated"/>
    
</flow>
    <flow name="implementation_UpdatePurchaseInfo">
    	<set-variable value="#[message.attributes.uriParams.purchaseInfoId]" doc:name="Set Variable" doc:id="addbc353-284d-434b-b7a5-261d7fbe4121" variableName="purchaseInfoId"/>
		<set-variable value="#[payload]" doc:name="originalPayload" doc:id="155e6c5c-0bef-4128-ae7b-f102852c88d7" variableName="originalPayload"/>
		<logger level="INFO" doc:name="Logger" doc:id="55a6128f-4499-4327-a9d1-50048d35a61f" message="received payload #[payload]"/>
		<db:delete doc:name="Delete all products" doc:id="fbde2f11-728b-4ac2-bae7-3e182390929e" config-ref="Database_Config" queryTimeoutUnit="HOURS">
				<db:sql><![CDATA[DELETE FROM purchaseinfos_products 
WHERE purchaseinfo_id = :purchaseinfo_id]]></db:sql>
				<db:input-parameters><![CDATA[#[{
	purchaseinfo_id : vars.purchaseInfoId
}]]]></db:input-parameters>
			</db:delete>
		<foreach doc:name="For Each" doc:id="a25d774f-cb81-43f2-8a1f-70c85d0215d3" collection="#[vars.originalPayload.product_id]">
			<set-variable value="#[payload]" doc:name="Set Variable" doc:id="dde83480-26e3-4f96-9ea7-094a36851c4b" variableName="productId"/>
			<db:insert doc:name="Insert products" doc:id="dbf4382d-efa1-45a3-9c44-accc2e3335c4" config-ref="Database_Config">
				<db:sql><![CDATA[INSERT INTO purchaseinfos_products (product_id, purchaseinfo_id ) VALUES 
(:product_id, :purchaseinfo_id)]]></db:sql>
				<db:parameter-types />
				<db:input-parameters><![CDATA[#[{
	product_id : vars.productId,
	purchaseinfo_id : vars.purchaseInfoId
}]]]></db:input-parameters>
				<db:auto-generated-keys-column-indexes />
				<db:auto-generated-keys-column-names />
			</db:insert>
			<logger level="TRACE" doc:name="Logger" doc:id="3e762d6d-a334-497b-bf03-2017ae855a10" message="#[vars.productId]" />
		</foreach>
		<db:update doc:name="Update PurchaseInfo" doc:id="4bf741cb-9e9a-469c-9613-42e573782a66" config-ref="Database_Config">
			<db:sql><![CDATA[UPDATE purchaseinfos 
SET employee_id = :employee_id, customer_id = :customer_id, cost = :cost, amount = :amount, date = :date 
WHERE purchaseinfo_id = :purchaseinfo_id]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	purchaseinfo_id : vars.purchaseInfoId,
	employee_id : vars.originalPayload.employee_id,
	customer_id : vars.originalPayload.customer_id,
	cost : vars.originalPayload.cost,
	amount : vars.originalPayload.amount,
	date : vars.originalPayload.date
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="c95b166c-075f-47b1-b397-187d4dba182d" message="#[payload]"/>
        <db:select doc:name="Select PurchaseInfo" doc:id="d584cb85-8c94-4558-b7b6-cebfd9880734" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT pi.purchaseinfo_id, pi.employee_id, pi.customer_id, pi.cost, pi.amount, pi.date, pp.product_id    
FROM purchaseinfos AS pi
INNER JOIN purchaseinfos_products AS pp
ON pi.purchaseinfo_id = pp.purchaseinfo_id 
WHERE pi.purchaseinfo_id = :purchaseInfo_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'purchaseInfo_id' : vars.purchaseInfoId}]]]></db:input-parameters>
		</db:select>
		<ee:transform xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload groupBy $.purchaseinfo_id pluck{
	"Status":200,
	"message":"Updated",
	purchaseinfo_id:$$,
	date:$.date distinctBy $ reduce $$+$,
	amount:$.amount distinctBy $ reduce $$+$,
	cost:$.cost distinctBy $ reduce $$+$,
    employee_id:$.employee_id distinctBy $ reduce $$+$,
    customer_id:$.customer_id distinctBy $ reduce $$+$,
	product_id:$.product_id distinctBy $
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="0e8b2362-0bbb-4bf6-b12c-4d54d217e1fc" message="PurchaseInfo is updated"/>
    
</flow>
    <flow name="implementation_DeleteCustomer">
    	<set-variable value="#[message.attributes.uriParams.customerId]" doc:name="Set Variable" doc:id="38c3c3b1-6883-4984-b78d-ff7d740d58eb" variableName="customerId"/>
		<db:delete doc:name="Delete Customer" doc:id="159c831b-1cae-4b43-b9ff-54aaa5393719" config-ref="Database_Config">
			<db:sql ><![CDATA[DELETE FROM customers WHERE customer_id = :customer_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'customer_id' : vars.customerId}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:id="26e70d31-eab3-4b72-9db0-b29af38c96bf">
            <ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Status": 204,
	"message": "Deleted"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="Deleting customer  in data base" />
    </flow>
    <flow name="implementation_DeleteEmployee">
    	<set-variable value="#[message.attributes.uriParams.employeeId]" doc:name="Set Variable" doc:id="e8476748-1269-4f60-9cc1-9152a502e4f5" variableName="employeeId"/>
		<db:delete doc:name="Delete Employee" doc:id="aea5449f-5678-4948-b512-37b498f6f891" config-ref="Database_Config">
			<db:sql ><![CDATA[DELETE FROM employees WHERE employee_id = :employee_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'employee_id' : vars.employeeId}]]]></db:input-parameters>
		</db:delete>
		<ee:transform>
            <ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Status": 204,
	"message": "Deleted"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
                <ee:set-variable variableName="employeeId"><![CDATA[attributes.uriParams.'employeeId']]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="Deleting employee in database" />
    </flow>
    <flow name="implementation_DeleteProduct">
    	<set-variable value="#[message.attributes.uriParams.productId]" doc:name="Set Variable" doc:id="05ce86a4-efa7-46ea-a0ad-59294cd0a86b" variableName="productId"/>
		<db:delete doc:name="Delete Product" doc:id="0c235b2a-d0e6-4fad-9bf6-043269bfc2da" config-ref="Database_Config">
			<db:sql ><![CDATA[DELETE FROM products WHERE product_id = :product_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'product_id' : vars.productId}]]]></db:input-parameters>
		</db:delete>
		<ee:transform>
            <ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Status": 204,
	"message": "Deleted"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="Deleting produdct in database" />
    </flow>
    <flow name="implementation_DeletePurchaseInfo">
    	<set-variable value="#[message.attributes.uriParams.purchaseInfoId]" doc:name="Set Variable" doc:id="59d3aca0-8458-495f-baa8-e18e08caa7b0" variableName="purchaseInfoId"/>
		<db:delete doc:name="Delete PurchaseInfo" doc:id="f44f2138-660e-44e8-9476-5e44f1887893" config-ref="Database_Config">
			<db:sql ><![CDATA[DELETE FROM purchaseinfos WHERE purchaseinfo_id = :purchaseinfo_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'purchaseinfo_id' : vars.pruchaseInfoId}]]]></db:input-parameters>
		</db:delete>
		<ee:transform>
            <ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Status": 204,
	"message": "Deleted"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="Delete purchaseInfo from database" />
    </flow>
  
</mule>
